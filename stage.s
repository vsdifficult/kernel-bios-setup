.code16
.text
.globl _start;
_start:
     jmp _boot
     nop
     /*блок параметров BIOS                           описание каждой сущности      */
     /*--------------------                           --------------------------    */
     .byte 0x6b,0x69,0x72,0x55,0x58,0x30,0x2e,0x31    /* метка OEM                  */
     .byte 0x00,0x02                                  /* байтов в секторе           */
     .byte 0x01                                       /* секторов в кластере        */
     .byte 0x01,0x00                                  /* зарезервированных секторов */
     .byte 0x02                                       /* таблиц fat                 */
     .byte 0xe0,0x00                                  /* записей в каталоге         */
     .byte 0x40,0x0b                                  /* всего секторов             */
     .byte 0xf0                                       /* описание среды передачи    */
     .byte 0x09,0x00                                  /* размер в каждой таблице fat    */
     .byte 0x02,0x01                                  /* секторов в дорожке         */
     .byte 0x02,0x00                                  /* головок на цилиндр         */
     .byte 0x00,0x00, 0x00, 0x00                      /* скрытых секторов           */
     .byte 0x00,0x00, 0x00, 0x00                      /* больших секторов           */
     .byte 0x00                                       /* идентификатор загрузочного диска*/
     .byte 0x00                                       /* неиспользуемых секторов    */
     .byte 0x29                                       /* внешняя сигнатура загрузки */
     .byte 0x22,0x62,0x79,0x20                        /* серийный номер             */
     .byte 0x41,0x53,0x48,0x41,0x4b,0x49              /* метка тома 6 байт из 11    */
     .byte 0x52,0x41,0x4e,0x20,0x42                   /* метка тома 5 байт из 11    */
     .byte 0x48,0x41,0x54,0x54,0x45,0x52,0x22         /* тип файловой системы       */

     /* включение макросов */
     #include "macros.S"

/* начало основного кода */
_boot:
     /* инициализация среды */
     initEnvironment 

     /* загрузка stage2 */
     loadFile $fileStage2


/* бесконечный цикл */
_freeze:
     jmp _freeze

/* непредвиденное завершение программы */
_abort:
     writeString $msgAbort
     jmp _freeze

     /* включение функций */
     #include "routines.S"

     /* пользовательские переменные */
     bootDrive : .byte 0x0000
     msgAbort  : .asciz "* * * F A T A L  E R R O R * * *"
     #fileStage2: .ascii "STAGE2  BIN"
     fileStage2: .ascii  "KERNEL  BIN"
     clusterID : .word 0x0000

     /* перемещение от начала к 510-му байту */
     . = _start + 0x01fe

     /* добавление сигнатуры загрузки             */
     .word BOOT_SIGNATURE
